# Install etcher to burn Raspberry Pi OS to sd card

# the creates: file is actually created in the following step after successfully
# running the shell script that has been downloaded in this step.
- name: Fetch etcher repo installer script
  ansible.builtin.uri:
    url: https://dl.cloudsmith.io/public/balena/etcher/setup.rpm.sh
    creates: "/etc/yum.repos.d/balena-etcher.repo"
    return_content: yes
  register: etcher_repo_installer
  tags:
    external_microcontrollers

# This step might fail with a non-zero return code but
# it is actually ok. If the repo file /etc/yum.repos.d/balena-etcher.repo
# has bee created, it is ok.

# The default value for stdin: is used in case the prior step is skipped.
# In that case the variable etcher_repo_installer will include a stdout key
# that contains info about skipping the step. There will be no content key.
# Since running both this step and running the prior step depend on the
# file not existing, if the prior step is skipped, the contents of the
# variable will not matter. This should probably be switched to a handler
# to avoid this issue.

- name: Run etcher repo installer
  become: yes
  environment:
    BASH: "/bin/bash"
  ansible.builtin.shell:
    cmd: sh -s --
    stdin:  "{{ etcher_repo_installer.content | default( etcher_repo_installer.stdout ) }}"
    creates: "/etc/yum.repos.d/balena-etcher.repo"
  tags:
    external_microcontrollers

- name: install etcher to burn RaspberryPi OS
  become: yes
  dnf:
    name: balena-etcher-electron
    state: latest
  tags:
    external_microcontrollers

# install screen for use with adafruit Circuit Python
- name: Install screen
  become: yes
  dnf:
    name: screen
    state: present
  tags:
    external_microcontrollers

# allow access to to the serial device
- name: allow serial device access
  become: yes
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: dialout
    append: yes
  tags:
    external_microcontrollers
